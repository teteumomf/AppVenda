unit ModelCliente;

interface

uses Cliente, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, DMConexao;

type
  TModelCliente = class(TInterfacedObject, IModelCliente)
  private
    FQuery: TFDQuery;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: IModelCliente;

  end;

implementation

{ TModelCliente }

constructor TModelCliente.Create;
begin
  FQuery := TFDQuery.Create(nil);
  FQuery.Connection := DM.FDConexao;
  FQuery.Active := false;
  FQuery.SQL.Clear;
end;

destructor TModelCliente.Destroy;
begin
 FreeAndNil(FQuery);
  inherited;
end;

class function TModelCliente.New: IModelCliente;
begin
   self.Create;
end;

end.
