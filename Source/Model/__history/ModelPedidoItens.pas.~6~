unit ModelPedidoItens;

interface

uses Pedido, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, DMConexao, System.SysUtils, System.Classes;

type
  TModelPedidoItens = class(TInterfacedObject, IModelPedidoItens)
  private
    FQuery : TFDQuery;

    FCodPedido: integer;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: IModelPedidoItens;

    function CodPedido(value: integer): IModelPedidoItens;
    function GravaPedidoItens(FTable: TFDMemTable): IModelPedidoItens;
    function DeletaPedidoItens: IModelPedidoItens;
    function BuscaPedidoItens(FTable: TFDMemTable): IModelPedidoItens;
  end;

implementation

{ TModelPedidoItens }

function TModelPedidoItens.BuscaPedidoItens(
  FTable: TFDMemTable): IModelPedidoItens;
begin

end;

function TModelPedidoItens.CodPedido(value: integer): IModelPedidoItens;
begin
  Result := self;
  FCodPedido := value;
end;

constructor TModelPedidoItens.Create;
begin
  FQuery := TFDQuery.Create(nil);
  FQuery.Connection := DM.FDConexao;
  FQuery.Active := false;
  FQuery.SQL.Clear;
end;

function TModelPedidoItens.DeletaPedidoItens: IModelPedidoItens;
begin
  Result := self;
  DM.FDConexao.StartTransaction;
  try
    FQuery.SQL.Add('delete from wkvenda.tb_pedido_itens where id_pedido = :idpedido');
    FQuery.ParamByName('idpedido').AsInteger := FCodPedido;
    FQuery.ExecSQL;
    DM.FDConexao.Commit;
  except
    DM.FDConexao.Rollback;
  end;
end;

destructor TModelPedidoItens.Destroy;
begin
  FreeAndNil(FQuery);
  inherited;
end;

function TModelPedidoItens.GravaPedidoItens(
  FTable: TFDMemTable): IModelPedidoItens;
begin

end;

class function TModelPedidoItens.New: IModelPedidoItens;
begin
  Result := Self.Create;
end;

end.
